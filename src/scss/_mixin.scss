@charset "UTF-8";
@mixin pcBig {
	//PC大の場合
	@media only screen and (min-width: $bpPcBig) {
		@content;
	}
}

@mixin pcMid {
	//PC中の場合
	@media only screen and (min-width: $bpPcMid) {
		@content;
	}
}

@mixin pcSm {
	//PC小の場合
	@media only screen and (min-width: $bpPcSm) {
		@content;
	}
}

@mixin tabletL {
	//タブレット横の場合
	@media only screen and (max-width: $bpTabletL) {
		@content;
	}
}

@mixin tabletP {
	//タブレット縦の場合
	@media only screen and (max-width: $bpTabletP) {
		@content;
	}
}

@mixin sphoneP {
	//スマートフォン縦の場合
	@media only screen and (max-width: $bpSphoneP) {
		@content;
	}
}

@mixin sphone7 {
	//スマートフォン縦の場合
	@media only screen and (max-width: $bpSphone7) {
		@content;
	}
}

@mixin sphoneSE {
	//iPhoneSEの場合
	@media only screen and (max-width: $bpSphoneSE) {
		@content;
	}
}

// clearfix
@mixin clearfix {
	&::after {
		clear: both;
		content: "";
		display: table;
	}
}

// linkColor
@mixin linkColor($color) {
	color: $color;
	&:hover,
	&:active,
	&:focus {
		color: lighten($color, 20%);
	}
}

// hidetext
@mixin hidetext {
	text-indent: -9999px;
	overflow: hidden;
	white-space: nowrap;
}

// border-radius
@mixin border-radius($radius) {
	border-radius: $radius;
}

// absPosition
@mixin absPosition ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

// vCenter
@mixin vCenter {
	display: flex;
	justify-content: center;
	align-items: center;
}

@function fsRatio($size) {
	@return $size / ($spBaseWidth/2) * 100;
}

@function fsRatioPcSm($size) {
	@return $size / ($bpPcBig) * 100;
}

@mixin fontsize ($size: $baseFont) {
	font-size: $size;
	font-size: fsRatio($size) + vw;
}

@mixin fontsizePC ($size: $baseFont) {
	font-size: $size;
	font-size: fsRatioPcSm($size) + vw;
}

@mixin mincho {
	font-family: $fontMincho;
}
